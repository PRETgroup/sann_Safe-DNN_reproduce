/*
 * nn_wolf1.h
 * A pre-trained time-predictable artificial neural network, generated by Keras2C.py.
 * Based on ann.h written by keyan
 */

#ifndef NN_WOLF1_H_
#define NN_WOLF1_H_

#pragma once

// includes
#include "nn_types.h"

// NOTE: only values marked "*" may be changed with defined behaviour

// Network input defines
#define WOLF1_INPUT_DIM_COUNT	1
#define WOLF1_INPUT_DIM_0	20

// Network output defines
#define WOLF1_MAX_PL_LEN 2
#define WOLF1_OUTPUT_DIM_COUNT	1
#define WOLF1_OUTPUT_DIM_0	8

// Dense layer defines
#define WOLF1_L0_DENSE_NEURON_COUNT	30
#define WOLF1_L0_DENSE_USE_BIAS	1
#define WOLF1_L0_DENSE_ACTIVATION	ACT_ENUM_SIGMOID	// *
#define WOLF1_L0_DENSE_DIM_COUNT	1
#define WOLF1_L0_DENSE_DIM_0	30

// Dense layer defines
#define WOLF1_L1_DENSE_NEURON_COUNT	8
#define WOLF1_L1_DENSE_USE_BIAS	1
#define WOLF1_L1_DENSE_ACTIVATION	ACT_ENUM_SIGMOID	// *
#define WOLF1_L1_DENSE_DIM_COUNT	1
#define WOLF1_L1_DENSE_DIM_0	8

// NN weights struct
typedef struct
{
	// Dense layer unit
	NN_NUM_TYPE wolf1_l0_dense_weights[WOLF1_INPUT_DIM_0][WOLF1_L0_DENSE_NEURON_COUNT];
	NN_NUM_TYPE wolf1_l0_dense_bias[WOLF1_L0_DENSE_NEURON_COUNT];
	// Dense layer unit
	NN_NUM_TYPE wolf1_l1_dense_weights[WOLF1_L0_DENSE_DIM_0][WOLF1_L1_DENSE_NEURON_COUNT];
	NN_NUM_TYPE wolf1_l1_dense_bias[WOLF1_L1_DENSE_NEURON_COUNT];
} NN_WOLF1;

// Static storage
NN_WOLF1 nn_weights_wolf1;

// Instance
typedef struct
{
	NN_NUM_TYPE inputs[WOLF1_INPUT_DIM_0];
	NN_NUM_TYPE wolf1_l0_dense_outputs[WOLF1_L0_DENSE_DIM_0];
	NN_NUM_TYPE outputs[WOLF1_MAX_PL_LEN][WOLF1_L1_DENSE_DIM_0];
	

	// Output pipeline
	int pl_index;
} NN_DATA_WOLF1;

// Functions
void nn_init_wolf1();
void run_wolf1_l0_dense();
void run_wolf1_l1_dense();

void nn_run_wolf1(NN_DATA_WOLF1 *nn_data);

#endif /* NN_WOLF1_H_ */