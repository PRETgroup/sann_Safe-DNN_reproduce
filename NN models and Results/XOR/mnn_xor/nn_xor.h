/*
 * nn_xor.h
 * A pre-trained time-predictable artificial neural network, generated by Keras2C.py.
 * Based on ann.h written by keyan
 */

#ifndef NN_XOR_H_
#define NN_XOR_H_

#pragma once

// includes
#include "nn_types.h"

// NOTE: only values marked "*" may be changed with defined behaviour

// Network input defines
#define XOR_INPUT_DIM_COUNT	1
#define XOR_INPUT_DIM_0	2

// Network output defines
#define XOR_MAX_PL_LEN 2
#define XOR_OUTPUT_DIM_COUNT	1
#define XOR_OUTPUT_DIM_0	1

// Dense layer defines
#define XOR_L0_DENSE_NEURON_COUNT	3
#define XOR_L0_DENSE_USE_BIAS	1
#define XOR_L0_DENSE_ACTIVATION	ACT_ENUM_LINEAR	// *
#define XOR_L0_DENSE_DIM_COUNT	1
#define XOR_L0_DENSE_DIM_0	3

// Dense layer defines
#define XOR_L1_DENSE_NEURON_COUNT	1
#define XOR_L1_DENSE_USE_BIAS	1
#define XOR_L1_DENSE_ACTIVATION	ACT_ENUM_LINEAR	// *
#define XOR_L1_DENSE_DIM_COUNT	1
#define XOR_L1_DENSE_DIM_0	1

// NN weights struct
typedef struct
{
	// Dense layer unit
	NN_NUM_TYPE xor_l0_dense_weights[XOR_INPUT_DIM_0][XOR_L0_DENSE_NEURON_COUNT];
	NN_NUM_TYPE xor_l0_dense_bias[XOR_L0_DENSE_NEURON_COUNT];
	// Dense layer unit
	NN_NUM_TYPE xor_l1_dense_weights[XOR_L0_DENSE_DIM_0][XOR_L1_DENSE_NEURON_COUNT];
	NN_NUM_TYPE xor_l1_dense_bias[XOR_L1_DENSE_NEURON_COUNT];
} NN_XOR;

// Static storage
NN_XOR nn_weights_xor;

// Instance
typedef struct
{
	NN_NUM_TYPE inputs[XOR_INPUT_DIM_0];
	NN_NUM_TYPE xor_l0_dense_outputs[XOR_L0_DENSE_DIM_0];
	NN_NUM_TYPE outputs[XOR_MAX_PL_LEN][XOR_L1_DENSE_DIM_0];
	

	// Output pipeline
	int pl_index;
} NN_DATA_XOR;

// Functions
void nn_init_xor();
void run_xor_l0_dense();
void run_xor_l1_dense();

void nn_run_xor(NN_DATA_XOR *nn_data);

#endif /* NN_XOR_H_ */