/*
 * nn_ess_demand.h
 * A pre-trained time-predictable artificial neural network, generated by Keras2C.py.
 * Based on ann.h written by keyan
 */

#ifndef NN_ESS_DEMAND_H_
#define NN_ESS_DEMAND_H_

#pragma once

// includes
#include "nn_types.h"

// NOTE: only values marked "*" may be changed with defined behaviour

// Network input defines
#define ESS_DEMAND_INPUT_DIM_COUNT	1
#define ESS_DEMAND_INPUT_DIM_0	10

// Network output defines
#define ESS_DEMAND_MAX_PL_LEN 2
#define ESS_DEMAND_OUTPUT_DIM_COUNT	1
#define ESS_DEMAND_OUTPUT_DIM_0	1

// Dense layer defines
#define ESS_DEMAND_L0_DENSE_NEURON_COUNT	10
#define ESS_DEMAND_L0_DENSE_USE_BIAS	1
#define ESS_DEMAND_L0_DENSE_ACTIVATION	ACT_ENUM_TANH	// *
#define ESS_DEMAND_L0_DENSE_DIM_COUNT	1
#define ESS_DEMAND_L0_DENSE_DIM_0	10

// Dense layer defines
#define ESS_DEMAND_L1_DENSE_NEURON_COUNT	1
#define ESS_DEMAND_L1_DENSE_USE_BIAS	1
#define ESS_DEMAND_L1_DENSE_ACTIVATION	ACT_ENUM_TANH	// *
#define ESS_DEMAND_L1_DENSE_DIM_COUNT	1
#define ESS_DEMAND_L1_DENSE_DIM_0	1

// NN weights struct
typedef struct
{
	// Dense layer unit
	NN_NUM_TYPE ess_demand_l0_dense_weights[ESS_DEMAND_INPUT_DIM_0][ESS_DEMAND_L0_DENSE_NEURON_COUNT];
	NN_NUM_TYPE ess_demand_l0_dense_bias[ESS_DEMAND_L0_DENSE_NEURON_COUNT];
	// Dense layer unit
	NN_NUM_TYPE ess_demand_l1_dense_weights[ESS_DEMAND_L0_DENSE_DIM_0][ESS_DEMAND_L1_DENSE_NEURON_COUNT];
	NN_NUM_TYPE ess_demand_l1_dense_bias[ESS_DEMAND_L1_DENSE_NEURON_COUNT];
} NN_ESS_DEMAND;

// Static storage
NN_ESS_DEMAND nn_weights_ess_demand;

// Instance
typedef struct
{
	NN_NUM_TYPE inputs[ESS_DEMAND_INPUT_DIM_0];
	NN_NUM_TYPE ess_demand_l0_dense_outputs[ESS_DEMAND_L0_DENSE_DIM_0];
	NN_NUM_TYPE outputs[ESS_DEMAND_MAX_PL_LEN][ESS_DEMAND_L1_DENSE_DIM_0];
	

	// Output pipeline
	int pl_index;
} NN_DATA_ESS_DEMAND;

// Functions
void nn_init_ess_demand();
void run_ess_demand_l0_dense();
void run_ess_demand_l1_dense();

void nn_run_ess_demand(NN_DATA_ESS_DEMAND *nn_data);

#endif /* NN_ESS_DEMAND_H_ */