/*
 * nn_rabbit.h
 * A pre-trained time-predictable artificial neural network, generated by Keras2C.py.
 * Based on ann.h written by keyan
 */

#ifndef NN_RABBIT_H_
#define NN_RABBIT_H_

#pragma once

// includes
#include "nn_types.h"

// NOTE: only values marked "*" may be changed with defined behaviour

// Network input defines
#define RABBIT_INPUT_DIM_COUNT	1
#define RABBIT_INPUT_DIM_0	20

// Network output defines
#define RABBIT_MAX_PL_LEN 2
#define RABBIT_OUTPUT_DIM_COUNT	1
#define RABBIT_OUTPUT_DIM_0	4

// Dense layer defines
#define RABBIT_L0_DENSE_NEURON_COUNT	24
#define RABBIT_L0_DENSE_USE_BIAS	1
#define RABBIT_L0_DENSE_ACTIVATION	ACT_ENUM_SIGMOID	// *
#define RABBIT_L0_DENSE_DIM_COUNT	1
#define RABBIT_L0_DENSE_DIM_0	24

// Dense layer defines
#define RABBIT_L1_DENSE_NEURON_COUNT	4
#define RABBIT_L1_DENSE_USE_BIAS	1
#define RABBIT_L1_DENSE_ACTIVATION	ACT_ENUM_SIGMOID	// *
#define RABBIT_L1_DENSE_DIM_COUNT	1
#define RABBIT_L1_DENSE_DIM_0	4

// NN weights struct
typedef struct
{
	// Dense layer unit
	NN_NUM_TYPE rabbit_l0_dense_weights[RABBIT_INPUT_DIM_0][RABBIT_L0_DENSE_NEURON_COUNT];
	NN_NUM_TYPE rabbit_l0_dense_bias[RABBIT_L0_DENSE_NEURON_COUNT];
	// Dense layer unit
	NN_NUM_TYPE rabbit_l1_dense_weights[RABBIT_L0_DENSE_DIM_0][RABBIT_L1_DENSE_NEURON_COUNT];
	NN_NUM_TYPE rabbit_l1_dense_bias[RABBIT_L1_DENSE_NEURON_COUNT];
} NN_RABBIT;

// Static storage
NN_RABBIT nn_weights_rabbit;

// Instance
typedef struct
{
	NN_NUM_TYPE inputs[RABBIT_INPUT_DIM_0];
	NN_NUM_TYPE rabbit_l0_dense_outputs[RABBIT_L0_DENSE_DIM_0];
	NN_NUM_TYPE outputs[RABBIT_MAX_PL_LEN][RABBIT_L1_DENSE_DIM_0];
	

	// Output pipeline
	int pl_index;
} NN_DATA_RABBIT;

// Functions
void nn_init_rabbit();
void run_rabbit_l0_dense();
void run_rabbit_l1_dense();

void nn_run_rabbit(NN_DATA_RABBIT *nn_data);

#endif /* NN_RABBIT_H_ */